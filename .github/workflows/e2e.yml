name: e2e tests

on:
  workflow_dispatch:
  pull_request:


jobs:
  build:
    name: build binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: edgelesssys
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build
        run: nix build .

  test:
    name: azure
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
          - azure_private
          - azure_shared
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: edgelesssys
      - name: Login to Azure
        uses: ./.github/actions/login_azure
        with:
          azure_credentials: ${{ secrets.UPLOSI_AZURE_E2E_CREDENTIALS }}
      - name: Create base name override
        id: name
        env:
          variant: ${{ matrix.variant }}
        run: |
          uuid=$(cat /proc/sys/kernel/random/uuid)
          uuid=${uuid:0:8}

          base_name="uplosi_e2e_${variant}_${uuid}"
          echo "base_name=${base_name}" | tee -a "$GITHUB_OUTPUT"

          mkdir -p ./testdata/uplosi.conf.d
          cat <<EOF > ./testdata/uplosi.conf.d/0100-azure.conf
          [base]
          name = "${base_name}"
          EOF
          cat ./testdata/uplosi.conf.d/0100-azure.conf
      - name: Build minimal image
        id: build
        run: |
          echo "img=$(./hack/build_image.sh)" | tee -a "$GITHUB_OUTPUT"
      - name: Run e2e tests
        working-directory: ./testdata
        env:
          variant: ${{ matrix.variant }}
          img: ${{ steps.build.outputs.img }}
        run: |
          nix shell .# --command uplosi upload --enable-variant-glob "${variant}" "${img}"
      - name: Delete resource group
        if: always()
        env:
          rg: ${{ steps.name.outputs.base_name }}
          variant: ${{ matrix.variant }}
        run: |
          if grep -q "shared" <<< "${variant}"; then
            echo "Resetting gallery sharing status of gallery ${rg}"
            az sig share reset --resource-group "${rg}" --gallery-name "${rg}"
          fi
          echo "Deleting resource group ${rg}"
          az group delete --name "${rg}" --yes
